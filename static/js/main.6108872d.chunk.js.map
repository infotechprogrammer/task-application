{"version":3,"sources":["components/UI/Section.module.css","components/Tasks/TaskItem.module.css","components/Tasks/Tasks.module.css","components/NewTask/TaskForm.module.css","components/UI/Section.js","components/Tasks/TaskItem.js","components/Tasks/Tasks.js","components/NewTask/TaskForm.js","hooks/use-http.js","components/NewTask/NewTask.js","App.js","index.js"],"names":["module","exports","Section","props","className","classes","section","children","TaskItem","task","Tasks","taskList","items","length","map","text","id","content","error","onClick","onFetch","loading","container","TaskForm","taskInputRef","useRef","form","onSubmit","event","preventDefault","enteredValue","current","value","trim","onEnterTask","type","ref","useHttp","useState","isLoading","setIsLoading","setError","sendRequest","useCallback","requestConfig","applyData","a","fetch","url","method","headers","body","JSON","stringify","response","ok","Error","json","data","message","NewTask","sendTaskRequest","createTask","taskText","taskData","createdTask","name","onAddTask","enterTaskHandler","bind","App","tasks","setTasks","fetchTasks","useEffect","tasksObj","loadedTasks","taskKey","push","Fragment","prevTasks","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6108872d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__ZSicA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"TaskItem_task__2702O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Tasks_container__3uGl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"TaskForm_form__CCga1\"};","import classes from './Section.module.css';\n\nconst Section = (props) => {\n  return <section className={classes.section}>{props.children}</section>;\n};\n\nexport default Section;\n","import classes from './TaskItem.module.css';\n\nconst TaskItem = (props) => {\n  return <li className={classes.task}>{props.children}</li>\n};\n\nexport default TaskItem;","import Section from '../UI/Section';\nimport TaskItem from './TaskItem';\nimport classes from './Tasks.module.css';\n\nconst Tasks = (props) => {\n  let taskList = <h2>No tasks found. Start adding some!</h2>;\n\n  if (props.items.length > 0) {\n    taskList = (\n      <ul>\n        {props.items.map((task) => (\n          <TaskItem key={task.id}>{task.text}</TaskItem>\n        ))}\n      </ul>\n    );\n  }\n\n  let content = taskList;\n\n  if (props.error) {\n    content = <button onClick={props.onFetch}>Try again</button>;\n  }\n\n  if (props.loading) {\n    content = 'Loading tasks...';\n  }\n\n  return (\n    <Section>\n      <div className={classes.container}>{content}</div>\n    </Section>\n  );\n};\n\nexport default Tasks;\n","import { useRef } from 'react';\n\nimport classes from './TaskForm.module.css';\n\nconst TaskForm = (props) => {\n  const taskInputRef = useRef();\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredValue = taskInputRef.current.value;\n\n    if (enteredValue.trim().length > 0) {\n      props.onEnterTask(enteredValue);\n    }\n    taskInputRef.current.value='';\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <input type='text' ref={taskInputRef} />\n      <button>{props.loading ? 'Sending...' : 'Add Task'}</button>\n    </form>\n  );\n};\n\nexport default TaskForm;\n","import { useState, useCallback } from \"react\";\r\n\r\nconst useHttp = () => {\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n  const sendRequest = useCallback( async (requestConfig, applyData) => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        requestConfig.url, {\r\n            method: requestConfig.method ? requestConfig.method: 'GET',\r\n            headers: requestConfig.headers ? requestConfig.headers: {},\r\n            body: requestConfig.body ? JSON.stringify(requestConfig.body) : null\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Request failed!');\r\n      }\r\n\r\n      const data = await response.json();\r\n      applyData(data);\r\n      \r\n    } catch (err) {\r\n      setError(err.message || 'Something went wrong!');\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n    return{\r\n        isLoading,\r\n        error,\r\n        sendRequest,\r\n    };\r\n};\r\n\r\nexport default useHttp; ","import Section from '../UI/Section';\nimport TaskForm from './TaskForm';\nimport useHttp from '../../hooks/use-http';\n\nconst NewTask = (props) => {\n  const { isLoading, error, sendRequest: sendTaskRequest } = useHttp();\n\n  const createTask = (taskText, taskData) => {\n    const generatedId = taskData.name; // firebase-specific => \"name\" contains generated id\n    const createdTask = { id: generatedId, text: taskText };\n\n    props.onAddTask(createdTask);\n  };\n\n  const enterTaskHandler = async (taskText) => {\n    sendTaskRequest(\n      {\n        url: 'https://custom-hook-f743c-default-rtdb.firebaseio.com/tasks.json',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: { text: taskText },\n      },\n      createTask.bind(null, taskText)\n    );\n  };\n\n  return (\n    <Section>\n      <TaskForm onEnterTask={enterTaskHandler} loading={isLoading} />\n      {error && <p>{error}</p>}\n    </Section>\n  );\n};\n\nexport default NewTask;\n","import React, { useEffect, useState } from 'react';\n\nimport Tasks from './components/Tasks/Tasks';\nimport NewTask from './components/NewTask/NewTask';\nimport useHttp from './hooks/use-http';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n\n  const { isLoading, error, sendRequest: fetchTasks } = useHttp();\n\n  useEffect(() => {\n    const transformTasks = (tasksObj) => {\n      const loadedTasks = [];\n\n      for (const taskKey in tasksObj) {\n        loadedTasks.push({ id: taskKey, text: tasksObj[taskKey].text });\n      }\n\n      setTasks(loadedTasks);\n    };\n\n    fetchTasks(\n      { url: 'https://custom-hook-f743c-default-rtdb.firebaseio.com/tasks.json' },\n      transformTasks\n    );\n  }, [fetchTasks]);\n\n  const taskAddHandler = (task) => {\n    setTasks((prevTasks) => prevTasks.concat(task));\n  };\n\n  return (\n    <React.Fragment>\n      <NewTask onAddTask={taskAddHandler} />\n      <Tasks\n        items={tasks}\n        loading={isLoading}\n        error={error}\n        onFetch={fetchTasks}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default App;","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}